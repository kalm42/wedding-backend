# import * from './generated/prisma.graphql'

type Mutation {
  inviteGuest(
    name: String!
    email: String!
    line1: String!
    line2: String
    city: String!
    state: String!
    zip: String!
    guestCount: Int!
  ): SuccessMessage
  deleteGuest(id: ID!): User
  updateUser(id: ID!, name: String, email: String, isGoing: Boolean, guestCount: Int): User
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  rsvp(
    password: String
    confirmPassword: String
    rsvpToken: String!
    rsvpAnswer: String!
    guestCount: String!
  ): User!
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission]!, userId: ID!): User
  createFundTransaction(
    token: String!
    amount: Int!
    gift: String!
    name: String
    line1: String
    line2: String
    city: String
    state: String
    zip: String
  ): Transaction!
  updateAddress(
    id: ID!
    line1: String
    line2: String
    city: String
    state: String
    zip: String
  ): Address!
  createInvitations: [Invitation]!
  createInvitation(userId: ID!): Invitation
}

type Query {
  RSVP: [User]!
  address(where: AddressWhereUniqueInput!): Address
  addresses: [Address]!
  confirmedGuestCount: Int!
  giftStatus: GiftStatus
  me: User
  noInvite: [User]!
  noRSVP: [User]!
  transactions: [Transaction]!
  allUsersTransactions(gift: Gift!): [Transaction]!
  unconfirmedGuestCount: Int!
  user(where: UserWhereUniqueInput!): User
  users: [User]!
}

type SuccessMessage {
  message: String
}

type GiftStatus {
  gym: Int
  honeymoon: Int
}

type User {
  id: ID!
  name: String!
  email: String!
  address: Address!
  guestCount: Int!
  permissions: [Permission!]!
}
